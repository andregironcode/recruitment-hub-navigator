
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rtuzdeaxmpikwuvplcbh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ0dXpkZWF4bXBpa3d1dnBsY2JoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1MDYzMTIsImV4cCI6MjA1OTA4MjMxMn0.Ame9c-wN0mL45G_x01pcY0G1ryY1elR5LuUg7BWYJhU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create Supabase client with storage options
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
    global: {
      headers: {
        'X-Client-Info': 'supabase-js-web/2.49.4',
      },
    },
  }
);

// Check if storage buckets are accessible
export const checkStorageBuckets = async () => {
  try {
    // We don't attempt to create the bucket anymore, just check if we can access it
    const { data: buckets, error } = await supabase.storage.listBuckets();
    
    if (error) {
      console.error('Error listing buckets:', error);
      return { success: false, error };
    }
    
    // Check for the bucket with case-insensitive comparison
    const resumesBucketExists = buckets?.some(bucket => 
      bucket.id.toLowerCase() === 'resumes'.toLowerCase()
    );
    
    if (!resumesBucketExists) {
      console.warn('Resumes bucket does not exist. This should have been created via SQL migration.');
      return { 
        success: false, 
        error: new Error('Resumes bucket does not exist. File uploads will not work.')
      };
    } else {
      console.log('Resumes bucket exists and is accessible');
      return { success: true };
    }
  } catch (error) {
    console.error('Failed to check storage buckets:', error);
    return { success: false, error };
  }
};
