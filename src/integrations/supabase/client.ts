
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rtuzdeaxmpikwuvplcbh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ0dXpkZWF4bXBpa3d1dnBsY2JoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1MDYzMTIsImV4cCI6MjA1OTA4MjMxMn0.Ame9c-wN0mL45G_x01pcY0G1ryY1elR5LuUg7BWYJhU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create Supabase client with storage options
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
    global: {
      headers: {
        'X-Client-Info': 'supabase-js-web/2.49.4',
      },
    },
  }
);

// Initialize storage buckets if they don't exist
export const initializeStorageBuckets = async () => {
  try {
    // Check if resumes bucket exists
    const { data: buckets } = await supabase.storage.listBuckets();
    const resumesBucketExists = buckets?.some(bucket => bucket.id === 'resumes');
    
    if (!resumesBucketExists) {
      console.log('Creating resumes bucket...');
      await supabase.storage.createBucket('resumes', {
        public: true, // Make the bucket public so we can access files directly
        fileSizeLimit: 10485760, // 10MB limit
        allowedMimeTypes: [
          'application/pdf',
          'application/msword',
          'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
        ]
      });
      console.log('Resumes bucket created successfully');
    } else {
      console.log('Resumes bucket already exists');
    }
    
    return { success: true };
  } catch (error) {
    console.error('Failed to initialize storage buckets:', error);
    return { success: false, error };
  }
};
